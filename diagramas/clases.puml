@startuml Diagrama de clases
class Garage {
    - vehiculos: Map<Vehiculo>;
    - reservas: Set<Evento>;
    - mantenimientos: Set<Evento>;
    - ticket: number;

    + comprarVehiculo(vehiculo: Vehiculo)

    + crearReserva()
    + limpiarVehiculo()

    + setters_y_getters()
}

class Cliente {
    + reservar()
    + devolverVehiculo()
}

class Mecanico {
    + realizarMantenimiento()
}

abstract class Vehiculo {
    - matricula: string
    - necesitaLimpieza: boolean
    
    + abstract obtenerTarifa(dias: number, kilometros: number)
    + abstract obtenerTarifaMantenimiento(dias: number)
}

class Compacto {

}
class Sedán {

}
class SUV {

}

class Evento {
    - cant_dias: number
    - tipoVehiculo: string
    - vehiculo: Vehiculo
    - ticket: number

    + setters_y_getters()

    - calcularCantDias()
}

class Calendario {
    + revisarCalendario()
    + estaDisponibleHoy()
}


' Relaciones

Cliente *-- Garage

Mecanico *-r- Garage

Garage *-d- Vehiculo
Garage *-d- Evento
Garage *-r- Calendario

Evento *-r- Vehiculo

Vehiculo <|-- Compacto
Vehiculo <|-- Sedán
Vehiculo <|-- SUV

@enduml